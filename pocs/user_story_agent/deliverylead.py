"""Delivery Lead agent and helpers.

This agent orchestrates the user story workflow by delegating to two
sub-agents: ``functional_agent`` and ``technical_agent``. The final
output is the technical specification generated by ``technical_agent``.
"""

from agents import Agent
from agents.extensions.visualization import draw_graph

from .agents.functional_agent import FunctionalSpec, functional_agent
from .agents.technical_agent import TechnicalSpec, technical_agent


DELIVERY_PROMPT = (
    "You are a software delivery lead. When given a feature description, "
    "first delegate to the FunctionalSpecAgent to produce a functional "
    "specification. Then delegate to the TechnicalSpecAgent to convert that "
    "functional spec into a technical specification. Return the technical "
    "specification as the final result."
)


delivery_lead_agent = Agent(
    name="DeliveryLeadAgent",
    instructions=DELIVERY_PROMPT,
    handoffs=[functional_agent, technical_agent],
    output_type=TechnicalSpec,
)


def visualize_workflow(filename: str | None = None):
    """Generate a graphviz visualization of the agent workflow."""

    return draw_graph(delivery_lead_agent, filename=filename)
